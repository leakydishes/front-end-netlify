{"version":3,"sources":["utils/firebase.js","routes/HomePage.jsx","routes/AboutPage.jsx","Footer.jsx","NavigationBar.jsx","NavFooter.jsx","routes/ConnectPage.jsx","Input.jsx","routes/Signup.jsx","routes/Login.jsx","routes/Profile.jsx","PostType.jsx","Post.jsx","routes/PostPage.jsx","App.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","storage","getStorage","provider","GoogleAuthProvider","setCustomParameters","prompt","signInUserWithEmailAndPassword","email","password","a","signInWithEmailAndPassword","createUserDocFromAuth","userAuth","additionalInformation","userDocRef","doc","uid","getDoc","exists","displayName","createdAt","Date","setDoc","console","log","message","createAuthUserWithEmailandPassword","createUserWithEmailAndPassword","getPostsFromFirestore","postsCollection","collection","getDocs","postsSnapshot","postsList","docs","map","id","data","deletePostFromFirestore","postId","deleteDoc","error","HomePage","useState","questions","setQuestions","searchTerm","setSearchTerm","expandedPostId","setExpandedPostId","isAuthenticated","setIsAuthenticated","loading","setLoading","navigate","useNavigate","useEffect","currentUser","questionsList","checkAuthState","filteredQuestions","filter","question","title","toLowerCase","includes","postType","handleDelete","type","placeholder","value","onChange","e","target","length","key","className","timestamp","seconds","toLocaleDateString","onClick","abstract","content","tags","AboutPage","Footer","to","href","NavigationBar","NavFooter","ConnectPage","Input","props","name","Signup","confirmPassword","contact","setContact","handleChange","event","prevValue","handleSubmit","preventDefault","alert","user","Login","logGoogleUser","signInWithPopup","Profile","setUser","signOut","then","catch","PostType","setPostType","handleTypeChange","checked","htmlFor","Post","setTitle","setAbstract","setContent","setTags","imageUpload","setImageUpload","errorMessage","setErrorMessage","successMessage","setSuccessMessage","unsubscribe","onAuthStateChanged","authUser","handleImageUpload","uniqueID","uuidv4","imageUrl","storageRef","ref","uploadBytes","snapshot","getDownloadURL","downloadURL","handlePost","formData","serverTimestamp","addDoc","onSubmit","TextArea","files","Button","PostPage","App","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a37cdadd.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth'\nimport { getStorage } from 'firebase/storage';\nimport { getFirestore, collection, getDocs, addDoc, doc, getDoc, setDoc, deleteDoc, serverTimestamp } from 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAp0C_M4KT88D4V3kxYs-RmIP04cRIEX34\",\n  authDomain: \"deakin-app-web-project.firebaseapp.com\",\n  projectId: \"deakin-app-web-project\",\n  storageBucket: \"deakin-app-web-project.appspot.com\",\n  messagingSenderId: \"719775334290\",\n  appId: \"1:719775334290:web:bda4557b2cbd172a0f8b4b\"\n};\n\nconst firebaseApp = initializeApp(firebaseConfig); // Initialize Firebase\n\n// Initialize Firebase Auth, Firestore, and Storage\nexport const auth = getAuth(firebaseApp);\nexport const db = getFirestore(firebaseApp);\nexport const storage = getStorage(firebaseApp);\n\n\nconst provider = new GoogleAuthProvider(); // Instance of Google Provider\n    provider.setCustomParameters ({\n        prompt:\"select_account\"\n    });\n\n// Sign in Google Auth\nexport const signInwithGooglePopup = () => signInWithPopup(auth, provider);\n\n// Sign in add user with email and password\nexport const signInUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n\n  return await signInWithEmailAndPassword(auth, email, password);\n};\n\n// Create user in db\n// export const createUserDocFromAuth= async (userAuth) =>{\nexport const createUserDocFromAuth= async (userAuth, additionalInformation ={}) =>{\n  // if (!userAuth.email) return; //check email first\n\n  const userDocRef = doc (db, 'users', userAuth.uid ); //Save user in FireStore db\n  // console.log(userDocRef);\n\n  // Check user data against data from document\n  const userSnapshot = await getDoc(userDocRef);\n  // console.log(userSnapshot);\n  // console.log(userSnapshot.exists())\n\n  // Store data from document\n  if (! userSnapshot.exists()){\n    const {displayName, email} = userAuth;\n    const createdAt = new Date();\n\n  try{\n    await setDoc(userDocRef, {\n      displayName,\n      email,\n      createdAt,\n      ...additionalInformation\n    })\n  }\n  catch (error){\n    console.log('Error Creating User: ', error.message)\n  }\n}\nreturn userDocRef;\n}\n\n// Sign in add user with email and password\nexport const createAuthUserWithEmailandPassword = async (email, password) =>{\n  // check user info\n  if (!email || !password) return;\n  \n  return await createUserWithEmailAndPassword(auth, email, password)\n}\n\n// Get Posts\nexport const getPostsFromFirestore = async () => {\n  const postsCollection = collection(db, 'form-data'); // Firestore 'form-data'\n  const postsSnapshot = await getDocs(postsCollection);\n  const postsList = postsSnapshot.docs.map((doc) => ({\n    id: doc.id,\n    ...doc.data(),\n  }));\n  return postsList;\n};\n\n// Add Posts\nexport const addPostToFirestore = async (formData) => {\n  try {\n    await addDoc(collection(db, 'form-data'), {\n      ...formData,\n      timestamp: serverTimestamp(), // Add time auto\n    });\n  } catch (error) {\n    console.error('Error adding document: ', error);\n  }\n};\n\n// Delete Posts\nexport const deletePostFromFirestore = async (postId) => {\n  try {\n    await deleteDoc(doc(db, \"form-data\", postId)); // Delete using postId\n    console.log(\"Post deleted successfully\");\n  } catch (error) {\n    console.error(\"Error deleting document: \", error);\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { getPostsFromFirestore, deletePostFromFirestore } from '../utils/firebase';\nimport { useNavigate } from 'react-router-dom';\nimport { auth } from '../utils/firebase';\nimport '../HomePage.css'\n\nconst HomePage = () => {\n  // States\n  const [questions, setQuestions] = useState([]); // Store posts\n  const [searchTerm, setSearchTerm] = useState(''); // Search\n  const [expandedPostId, setExpandedPostId] = useState(null); // Track expanded\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Track auth\n  const [loading, setLoading] = useState(true); // Stop posts from auto showing\n  const navigate = useNavigate(); // Page redirects\n\n// Check if the user is logged in\nuseEffect(() => {\n  const checkAuthState = async () => {\n    const user = auth.currentUser;\n    if (user) {\n      setIsAuthenticated(true);\n\n      const questionsList = await getPostsFromFirestore(); // Fetch posts\n      setQuestions(questionsList);\n    } else {\n      setIsAuthenticated(false);\n    }\n    setLoading(false); // Set loading to false after auth check\n  };\n  checkAuthState();\n}, []);\n\n// Search\nconst handleSearchChange = (e) => {\n  setSearchTerm(e.target.value);\n};\n\n// Search\nconst filteredQuestions = questions.filter((question) =>\n  (question.title && question.title.toLowerCase().includes(searchTerm.toLowerCase())) ||\n  (question.postType && question.postType.toLowerCase().includes(searchTerm.toLowerCase()))\n);\n\n// Expand\nconst handleExpand = (id) => {\n  setExpandedPostId(expandedPostId === id ? null : id);\n};\n\n// Delete\nconst handleDelete = async (id) => {\n  await deletePostFromFirestore(id); // Delete from Firestore\n  setQuestions(questions.filter((question) => question.id !== id)); // Update state\n};\n\n// Redirect login page\nconst redirectToLogin = () => {\n  navigate('/login'); // Navigate to login page\n};\n\n// Loading when checking state\nif (loading) {\n  return <p>Loading...</p>;\n}\n\n// Not auth = Login btn\nif (!isAuthenticated) {\n  return (\n    <div>\n      <p>You need to be logged in to view posts.</p>\n      <button onClick={redirectToLogin}>Login</button>\n    </div>\n  );\n}\n\n// Posts\nreturn (\n  <div>\n    <h2>Question List</h2>\n\n    {/* Search Input */}\n    <input\n      type=\"text\"\n      placeholder=\"Search questions...\"\n      value={searchTerm}\n      onChange={handleSearchChange}\n    />\n\n    {filteredQuestions.length === 0 ? (\n      <p>No posts available</p>\n    ) : (\n      filteredQuestions.map((question) => (\n        <div key={question.id} className=\"question-card\">\n          <h3>{question.title}</h3>\n          <p>{question.postType === 'question' ? 'Question' : 'Article'}</p>\n          <p>{new Date(question.timestamp.seconds * 1000).toLocaleDateString()}</p>\n\n          {/* Expand button */}\n          <button onClick={() => handleExpand(question.id)}>\n            {expandedPostId === question.id ? 'Collapse' : 'Expand'}\n          </button>\n\n          {/* Delete button */}\n          <button onClick={() => handleDelete(question.id)}>Delete</button>\n\n          {/* Expanded Content */}\n          {expandedPostId === question.id && (\n            <div className=\"expanded-content\">\n              {question.abstract && <p>Abstract: {question.abstract}</p>}\n              <p>{question.content}</p>\n              <p>{question.tags}</p>\n            </div>\n          )}\n        </div>\n      ))\n    )}\n  </div>\n);\n};\n\nexport default HomePage;","import React from \"react\"\nfunction AboutPage ()\n{\n    return <div>\n    <h1> Welcome</h1>\n    <p>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer fringilla justo tellus, nec placerat lacus congue eget. \n      Praesent eget faucibus sapien, dignissim varius massa. Quisque cursus tellus nulla, id ultrices sapien accumsan eu. \n      Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Maecenas sed cursus orci. \n      Aliquam erat volutpat. Suspendisse pretium justo quis tortor iaculis rhoncus.\n    </p>\n    </div>\n}\n\nexport default AboutPage","import React from \"react\";\nimport './Footer.css'\nimport {Link} from 'react-router-dom'\nimport {FaFacebook, FaInstagram, FaTwitter} from 'react-icons/fa'\nfunction Footer(){\n    return (\n        <div className=\"footer\">\n            <div className=\"footer-left\">\n                <Link to='/about'>\n                    About Deakin\n                </Link>\n            </div>\n            <div className=\"footer-center\">\n                <Link to='/connect'>\n                    Connect with us\n                </Link>\n            </div>\n            <div className=\"footer-right\">\n               <a href=\"https://www.facebook.com/DeakinUniversity\">\n                <FaFacebook className=\"icon\"/>\n               </a>\n               <a href=\"https://www.instagram.com/deakinuniversity/\">\n                <FaInstagram className=\"icon\"/>\n               </a>\n               <a href=\"https://twitter.com/deakin\">\n                <FaTwitter className=\"icon\"/>\n               </a>\n            </div>\n        </div>\n    )\n}\nexport default Footer","import React from \"react\";\nimport { Outlet, Link } from \"react-router-dom\";\nimport './NavigationBar.css';\n\nfunction NavigationBar() {\n  return (\n    <div className='navbar-div'>\n      <Link className='link' to='/'>Home</Link>\n      <Link className='link' to='/about'>About</Link>\n      <Link className='link' to='/login'>Login</Link>\n      <Link className='link' to='/post'>Post</Link>\n      <Link className='link' to='/profile'>Profile</Link>\n      <Outlet />\n    </div>\n  );\n}\n\nexport default NavigationBar;\n","import React from \"react\";\nimport Footer from \"./Footer\";\nimport NavigationBar from \"./NavigationBar\";\nfunction NavFooter ()\n{\n    return (\n        <div>\n            <NavigationBar />\n            <Footer />\n        </div>\n    )\n}\n\nexport default NavFooter","import React from \"react\";\nfunction ConnectPage()\n{\n    return <div>\n    <h1> Contact us </h1>\n    <p>\n    Melbourne Burwood Campus\n    <br></br>\n    Call\n    +61 3 9244 6100\n    <br></br>\n    8.30am 5pm, Monday to Friday\n    </p>\n    </div>\n}\nexport default ConnectPage","import React from 'react'\n\nconst Input = (props)=>{\n    return <div>\n       <input name={props.name} type={props.type} placeholder={props.placeholder} onChange = {props.onChange}/>\n    </div>\n\n}\nexport default Input","import React, { useState } from 'react'\nimport {Link} from \"react-router-dom\"\nimport Input from '../Input'\nimport '../App.css'\nimport '../Signup.css'\nimport { createAuthUserWithEmailandPassword, createUserDocFromAuth } from '../utils/firebase'\n\nconst Signup = (props) => {\n\n  const [contact, setContact] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  })\n\n  const {displayName, email, password, confirmPassword} = contact\n\n  console.log(contact);\n\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setContact((prevValue) => {\n      return {\n        ...prevValue,\n        [name]: value\n      }\n    })\n  }\n  const handleSubmit = async(event) =>\n  {\n    event.preventDefault();\n\n    // Check password match\n    if (password !== confirmPassword){\n      alert('Passwords do not match!')\n      return;\n    }\n\n    try{\n      // const response = await createAuthUserWithEmailandPassword(email, password)\n      // console.log(response)\n      const {user} = await createAuthUserWithEmailandPassword(email, password)\n      await createUserDocFromAuth (user, {displayName});\n    }\n    catch(error){\n      console.log('Error Creating User', error.message)\n    }\n  }\n\n  return (\n    <div className='login-container'>\n      <Input\n        className='input-field'\n        name='displayName'\n        type='text'\n        placeholder='Display Name'\n        onChange={handleChange}\n        value={contact.displayName}\n      />\n      <br />\n      <Input\n        className='input-field'\n        name='email'\n        type='email'\n        placeholder='Email'\n        onChange={handleChange}\n        value={contact.email}\n      />\n      <br />\n      <Input\n        className='input-field'\n        name='password'\n        type='password'\n        placeholder='Password'\n        onChange={handleChange}\n        value={contact.password}\n      />\n      <br />\n      <Input\n        className='input-field'\n        name='confirmPassword'\n        type='password'\n        placeholder='Confirm Password'\n        onChange={handleChange}\n        value={contact.confirmPassword}\n      />\n      <br /><br />\n      <button onClick={handleSubmit} className='signup-button'>\n        Sign up\n      </button>\n      <br /><br />\n      <Link to='/login' className='login-link'>\n        Log in\n      </Link>\n    </div>\n  );\n}\n\nexport default Signup","import React, { useState } from 'react'\nimport {Link, useNavigate} from \"react-router-dom\" // React Hooks\nimport Input from '../Input'\nimport '../App.css'\nimport '../Login.css'\nimport { signInwithGooglePopup, createUserDocFromAuth, signInUserWithEmailAndPassword } from '../utils/firebase'\n\nconst Login = (props)=>{\n\n    const logGoogleUser = async () => {\n      try {\n          const { user } = await signInwithGooglePopup();\n          await createUserDocFromAuth(user); \n          console.log(\"Google user signed in:\", user);\n          navigate('/profile');\n      } catch (error) {\n          console.error(\"Error signing in with Google:\", error.message);\n      }\n    };\n\n    // Create hook\n    const navigate = useNavigate();\n\n    const handleSubmit = async (event) => {\n      event.preventDefault(); // Stop page refresh\n      try {\n        const { email, password } = contact; \n        const { user } = await signInUserWithEmailAndPassword(email, password);\n        console.log(\"User signed in:\", user);\n        navigate('/profile')\n      } catch (error) {\n        console.error(\"Error signing in:\", error.message);\n      }\n    }\n\n    const [contact, setContact] = useState({\n      email: '',\n      password: ''\n  })\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setContact((prevValue) => {\n      return {\n        ...prevValue,\n        [name]: value\n      }\n    })\n  }\n\n  return (\n    <div className='login-container'>\n      <Input\n        className='input-field'\n        name='email'\n        type='email'\n        placeholder='Email'\n        onChange={handleChange}\n        value={contact.email}\n      />\n      <br />\n      <Input\n        className='input-field'\n        name='password'\n        type='password'\n        placeholder='Password'\n        onChange={handleChange}\n        value={contact.password}\n      />\n      <br /><br />\n      <button onClick={handleSubmit} className='login-button'>\n        Log in\n      </button>\n      <br /><br />\n      <button onClick={logGoogleUser} className='login-button-google'>\n        Log in with Google\n      </button>\n      <br /><br />\n      <Link to='/signup' className='sign-up-link'>\n        Sign up\n      </Link>\n    </div>\n  );\n}\n\nexport default Login","import React from \"react\";\nimport {useEffect, useState} from \"react\"; // Hooks\nimport {getAuth} from 'firebase/auth'\nimport {useNavigate} from 'react-router-dom'\nimport '../Profile.css'\n\nfunction Profile()\n{\n    const [user, setUser] = useState(null) \n    const navigate = useNavigate()\n    const auth = getAuth()\n\n    useEffect (()=> {\n        // console.log(auth.currentUser)\n        setUser(auth.currentUser)\n    } , [auth]) \n\n    // Logout\n    const onLogout = () => {\n        auth.signOut()\n            .then(() => {\n                navigate('/login'); // Login page redirection\n            })\n            .catch((error) => {\n                console.error('Logout Error:', error);\n            });\n    };\n    return (\n        <div className=\"profile-container\">\n            {user ? (\n                <>\n                    <h1>{user.email}</h1>\n                    <button type=\"submit\" onClick={onLogout} className=\"profile-button\">\n                        Log Out\n                    </button>\n                </>\n            ) : (\n                <h1>Not logged in</h1>\n            )}\n        </div>\n    );\n}\n\nexport default Profile;","import React from 'react';\n\nconst PostType = ({ postType, setPostType }) => {\n  const handleTypeChange = (e) => {\n    setPostType(e.target.value); // Update state\n  };\n\n  return (\n    <div className=\"post-type-switch\">\n      <div>\n        <input\n          id=\"option-question\"\n          name=\"postType\"\n          value=\"question\"\n          checked={postType === 'question'}\n          type=\"radio\"\n          onChange={handleTypeChange}\n        />\n        <label htmlFor=\"option-question\">\n          <span></span>\n          Question\n        </label>\n      </div>\n      <div>\n        <input\n          id=\"option-article\"\n          name=\"postType\"\n          value=\"article\"\n          type=\"radio\"\n          checked={postType === 'article'}\n          onChange={handleTypeChange}\n        />\n        <label htmlFor=\"option-article\">\n          <span></span>\n          Article\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default PostType;\n","import React, { useState, useEffect } from 'react';\nimport { Button, Input, TextArea } from 'semantic-ui-react';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { collection, addDoc, serverTimestamp } from 'firebase/firestore';\nimport { storage, db, auth } from './utils/firebase'; // Firebase references, include auth\nimport { useNavigate } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid'; // For generating unique IDs\n\nconst Post = ({ postType }) => {\n  const [title, setTitle] = useState('');\n  const [abstract, setAbstract] = useState('');\n  const [content, setContent] = useState('');\n  const [tags, setTags] = useState('');\n  const [imageUpload, setImageUpload] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [user, setUser] = useState(null); // Track the authenticated user\n  const navigate = useNavigate();\n\n  // Check user auth\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        setUser(authUser); // Set user\n      } else {\n        setUser(null); // No user auth\n      }\n    });\n\n    return () => unsubscribe(); // Cleanup\n  }, []);\n\n  // Data Change\n  const chooseFile = (e) => {\n    setImageUpload(e.target.files[0]);\n  };\n\n  // Image upload\n  const handleImageUpload = async () => {\n    if (!imageUpload) {\n      setErrorMessage('Please select an image to upload.');\n      return null;\n    }\n\n    const uniqueID = uuidv4(); // ID\n    const imageUrl = `/images/${uniqueID}/${imageUpload.name}`; // Image path\n\n    const storageRef = ref(storage, imageUrl); // Firebase storage ref\n\n    try {\n      const snapshot = await uploadBytes(storageRef, imageUpload);\n      const downloadURL = await getDownloadURL(snapshot.ref); // Get image URL\n      return downloadURL; // Return image URL Firestore input\n    } catch (error) {\n      setErrorMessage('Error uploading image. Please try again.');\n      return null;\n    }\n  };\n\n  // Form\n  const handlePost = async (e) => {\n    e.preventDefault();\n\n    // User auth\n    if (!user) {\n      setErrorMessage('You need to be logged in to submit a post.');\n      return;\n    }\n\n    // Fields filled\n    if (!title || !content || (postType === 'article' && !abstract)) {\n      setErrorMessage('Please fill all required fields.');\n      return;\n    }\n\n    // Upload image\n    const imageUrl = await handleImageUpload();\n    if (!imageUrl) {\n      return;\n    }\n\n    // Form data to Firebase\n    const formData = {\n      postType, // Store the post type\n      title,\n      abstract: postType === 'article' ? abstract : '', // Include abstract if it's an article\n      content,\n      tags,\n      imageUrl, // Image URL Storage\n      timestamp: serverTimestamp(), // Add auto time\n    };\n\n    try {\n      // Save data\n      await addDoc(collection(db, 'form-data'), formData);\n      setSuccessMessage('Post submitted successfully!');\n\n      // Clear\n      setTitle('');\n      setAbstract('');\n      setContent('');\n      setTags('');\n      setImageUpload(null);\n\n      // Home Page\n      navigate('/');\n    } catch (error) {\n      setErrorMessage('Error submitting post.');\n    }\n  };\n\n  return (\n    <div className=\"post-container\">\n      <h2>New Post</h2>\n      <form onSubmit={handlePost}>\n        <div className=\"input-container\">\n          <label>Title</label>\n          <Input\n            type=\"text\"\n            placeholder=\"Enter a descriptive title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </div>\n\n        {/* Conditional render */}\n        {postType === 'article' && (\n          <div className=\"input-container\">\n            <label>Abstract</label>\n            <TextArea\n              placeholder=\"Enter a 1-paragraph abstract\"\n              value={abstract}\n              onChange={(e) => setAbstract(e.target.value)}\n            />\n          </div>\n        )}\n\n        <div className=\"input-container\">\n          <label>Content</label>\n          <TextArea\n            placeholder=\"Enter the full content of your post\"\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n          />\n        </div>\n\n        <div className=\"input-container\">\n          <label>Tags</label>\n          <Input\n            type=\"text\"\n            placeholder=\"Enter relevant tags\"\n            value={tags}\n            onChange={(e) => setTags(e.target.value)}\n          />\n        </div>\n\n        <div className=\"input-container\">\n          <label>Upload Image</label>\n          <Input type=\"file\" onChange={chooseFile} />\n        </div>\n\n        <Button type=\"submit\">Post</Button>\n      </form>\n\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n      {successMessage && <p className=\"success-message\">{successMessage}</p>}\n    </div>\n  );\n};\n\nexport default Post;\n","import React, { useState } from 'react';\nimport PostType from '../PostType'; \nimport Post from '../Post';\nimport '../PostPage.css'\n\nconst PostPage = () => {\n  const [postType, setPostType] = useState('question'); // Default to 'question'\n\n  return (\n    <div className=\"post-page\">\n      <h2>Create a New Post</h2>\n      \n      {/* PostType selector */}\n      <PostType postType={postType} setPostType={setPostType} />\n\n      {/* Pass to Post */}\n      <Post postType={postType} />\n    </div>\n  );\n};\n\nexport default PostPage;\n","import React from 'react';\nimport './App.css';\nimport HomePage from './routes/HomePage.jsx';\nimport AboutPage from './routes/AboutPage';\nimport {Routes, Route} from 'react-router-dom'\nimport NavFooter from './NavFooter'\nimport ConnectPage from './routes/ConnectPage'\nimport Signup from './routes/Signup.jsx';\nimport Login from './routes/Login.jsx';\nimport Profile from './routes/Profile.jsx';\nimport PostPage from './routes/PostPage.jsx';\nimport 'semantic-ui-css/semantic.min.css';\n\nfunction App() {\n  \n  return (\n  <Routes>\n  <Route path='/' element={<NavFooter />}>\n  <Route index element={<HomePage />}/>\n  <Route path='about' element= {<AboutPage />}/>\n  <Route path='post' element= {<PostPage />}/>\n  <Route path='connect' element= {<ConnectPage />}/>\n  <Route path='login' element= {<Login />}/>\n  <Route path='signup' element= {<Signup />}/>\n  <Route path='profile' element= {<Profile />}/>\n  </Route>\n  </Routes>\n  \n  \n  );\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n    \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}